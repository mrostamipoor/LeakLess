[package]
name = "spin-cli"
version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
license = "Apache-2.0 WITH LLVM-exception"
rust-version = "1.67"

[workspace.package]
version = "1.1.0"
authors = ["Fermyon Engineering <engineering@fermyon.com>"]
edition = "2021"

[dependencies]
anyhow = "1.0"
async-trait = "0.1"
bindle = { workspace = true }
bytes = "1.1"
chrono = "0.4"
clap = { version = "3.1.15", features = ["derive", "env"] }
cloud = { path = "crates/cloud" }
cloud-openapi = { git = "https://github.com/fermyon/cloud-openapi" }
comfy-table = "5.0"
ctrlc = { version = "3.2", features = ["termination"] }
dialoguer = "0.10"
dirs = "4.0"
dunce = "1.0"
futures = "0.3"
glob = "0.3.1"
hippo-openapi = "0.10"
hippo = { git = "https://github.com/deislabs/hippo-cli", tag = "v0.16.1" }
is-terminal = "0.4"
lazy_static = "1.4.0"
levenshtein = "1.0.5"
nix = { version = "0.24", features = ["signal"] }
outbound-http = { path = "crates/outbound-http" }
outbound-redis = { path = "crates/outbound-redis" }
spin-key-value = { path = "crates/key-value" }
spin-key-value-sqlite = { path = "crates/key-value-sqlite" }
path-absolutize = "3.0.11"
rand = "0.8"
regex = "1.5.5"
reqwest = { version = "0.11", features = ["stream"] }
rpassword = "7.0"
semver = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.82"
sha2 = "0.10.2"
spin-app = { path = "crates/app" }
spin-bindle = { path = "crates/bindle" }
spin-build = { path = "crates/build" }
spin-config = { path = "crates/config" }
spin-trigger-http = { path = "crates/trigger-http" }
spin-loader = { path = "crates/loader" }
spin-manifest = { path = "crates/manifest" }
spin-oci = { path = "crates/oci" }
spin-plugins = { path = "crates/plugins" }
spin-redis-engine = { path = "crates/redis" }
spin-templates = { path = "crates/templates" }
spin-trigger = { path = "crates/trigger" }
tempfile = "3.3.0"
tokio = { version = "1.23", features = ["full"] }
toml = "0.6"
tracing = { workspace = true }
tracing-subscriber = { version = "0.3.7", features = ["env-filter"] }
url = "2.2.2"
uuid = "^1.0"
wasmtime = { workspace = true }
watchexec = "2.2.0"
subprocess = "0.2.9"
###########proxy
openssl = { version = "0.10.25", optional = true }
hudsucker = { version = "0.18.0", features = ["full"] }
#tracing = "0.1.34"
rustls-pemfile = "1.0.1"
#tokio = { version = "0.2.22", features = ["full"] }
#tracing-subscriber = "0.3.15"
async-compression = { version = "0.3.7", features = ["tokio", "brotli", "gzip", "zlib", "zstd"], optional = true }
#async-trait = "0.1.7"
bstr = "1.0.0"
#bytes = "1.0.0"
#futures = "0.3.11"
http = "0.2.0"
hyper = { version = "0.14.7", features = ["client", "http1", "server", "stream", "tcp"] }
hyper-rustls = { version = "0.23.0", default-features = false, features = ["http1", "logging", "tls12", "webpki-tokio"], optional = true }
#hyper-tls = { version = "0.5.0", optional = true }
hyper-tungstenite = "0.8.0"
moka = { version = "0.9.0", features = ["future"], optional = true }
#openssl = { version = "0.10.25", optional = true }
#rand = { version = "0.8.0", features = ["std"],optional = true }
rcgen = { version = "0.10.0", features = ["x509-parser"], optional = true }
thiserror = "1.0.23"
time = { version = "0.3.1", optional = true }
#tokio = { version = "1.6.1", features = ["full"] }
tokio-rustls = "0.23.0"
tokio-tungstenite = { version = "0.17.2" }
tokio-util = { version = "0.7.0", features = ["io"], optional = true }
#tracing = { version = "0.1.21", features = ["log"] }
#crypto
rust-crypto = "0.2.36"
#rand = {version = "0.5.0", features = ["std"]}
floating-duration = "0.1.2"
#reverse
hyper-reverse-proxy = "0.5.1"
hyper-trust-dns = { version = "0.4.2", features = [
  "rustls-http2",
  "dnssec-ring",
  "dns-over-https-rustls",
  "rustls-webpki",
  "https-only"
] }
hyper-tls = { version = "0.5.0" }
base64 = "0.13.1"
#rusoto_credential = "0.46.0"
#rusoto_signature= "0.48.0"
#aws-sign-v4 = { path = "src/aws-sign-v4" }
aws-sign-v4 = "0.2.0"
hmac-sha256 = "0.1"
#chrono = "0.4.23"
#url = "2.3.1"
#hex = "0.4.3"
##ring = "0.16.20"
#http = "0.2.8"
##sha256 = "1.1.1"
sha256 = "1.1.1"
#JWT
jsonwebtoken = "9.1.0"
#gcm
aes-gcm = "0.10.3"

[target.'cfg(target_os = "linux")'.dependencies]
# This needs to be an explicit dependency to enable
# '--features openssl/vendored', which is used for Linux releases.
#add here
openssl = { version = "0.10", features = ["vendored"] }

[dev-dependencies]
hyper = { version = "0.14", features = ["full"] }
sha2 = "0.10.1"
which = "4.2.5"
e2e-testing = { path = "crates/e2e-testing" }

[build-dependencies]
cargo-target-dep = { git = "https://github.com/fermyon/cargo-target-dep", rev = "b7b1989fe0984c0f7c4966398304c6538e52fe49" }
vergen = { version = "7", default-features = false, features = [
  "build",
  "git",
] }

[features]
default = []
e2e-tests = []
outbound-redis-tests = []
config-provider-tests = []
outbound-pg-tests = []
outbound-mysql-tests = []
fermyon-platform = []

[workspace]
members = [
  "crates/app",
  "crates/bindle",
  "crates/build",
  "crates/config",
  "crates/core",
  "crates/http",
  "crates/loader",
  "crates/manifest",
  "crates/oci",
  "crates/outbound-http",
  "crates/outbound-redis",
  "crates/key-value",
  "crates/key-value-sqlite",
  "crates/key-value-redis",
  "crates/plugins",
  "crates/redis",
  "crates/templates",
  "crates/testing",
  "crates/trigger",
  "crates/trigger-http",
  "sdk/rust",
  "sdk/rust/macro",
  "crates/e2e-testing"
]

[workspace.dependencies]
tracing = { version = "0.1", features = ["log"] }
wasmtime-wasi = { version = "7.0.0", features = ["tokio"] }
wasi-common-preview1 = { package = "wasi-common", version = "7.0.0" }
wasmtime = { version = "7.0.0", features = ["component-model"] }
spin-componentize = { git = "https://github.com/fermyon/spin-componentize" }
wasi-host = { package = "host", git = "https://github.com/fermyon/spin-componentize" }
wasi-common = { git = "https://github.com/fermyon/spin-componentize" }
wasi-cap-std-sync = { git = "https://github.com/fermyon/spin-componentize" }

[workspace.dependencies.bindle]
git = "https://github.com/fermyon/bindle"
tag = "v0.8.2"
default-features = false
features = ["client"]

[workspace.dependencies.wit-bindgen-wasmtime]
git = "https://github.com/fermyon/wit-bindgen-backport"
rev = "e1e2525bbbc8430c4ebe57e9f4b3f63b6facff98"
features = ["async"]

[[bin]]
name = "leakless"
path = "src/bin/spin.rs"

[[bin]]
name = "inout"
path = "src/bin/inout.rs"